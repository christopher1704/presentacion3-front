{"ast":null,"code":"import _asyncToGenerator from \"/home/christopher/Documentos/2022-1/Prueba de Software/presentacion3/FRONT-git/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestBed } from '@angular/core/testing';\nimport { FormsModule } from '@angular/forms';\nimport { By } from '@angular/platform-browser';\nimport { UserComponent } from './user.component';\ndescribe('UserComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      imports: [HttpClientModule, FormsModule],\n      declarations: [UserComponent]\n    }).compileComponents();\n  }));\n  it('should create', () => {\n    const fixture = TestBed.createComponent(UserComponent);\n    const app = fixture.componentInstance; // se espera que ademas de True, sea un componente que exista\n\n    expect(app).toBeTruthy();\n  });\n  it('Add User', () => {\n    // se toma control del componente\n    const fixture = TestBed.createComponent(UserComponent);\n    const app = fixture.componentInstance; //se detectan cambios\n\n    fixture.detectChanges(); //se setean la supuesta informacion agregada\n\n    app.selectedUser.nombre = \"Nombre\";\n    app.selectedUser.primerApellido = \"primerApellido\";\n    app.selectedUser.segundoApellido = \"segundoApellido\";\n    app.selectedUser.email = \"mail\";\n    app.selectedUser.telefono = \"telefono\"; //se hace accion del boton save\n\n    let btnElement = fixture.debugElement.query(By.css('button.btn-primary'));\n    btnElement.nativeElement.click(); //se compara\n\n    expect(1).toEqual(app.check);\n  });\n  it('DELETE', () => {\n    const fixture = TestBed.createComponent(UserComponent);\n    const app = fixture.componentInstance; // se espera que ademas de True, sea un componente que exista\n    //se detectan cambios\n\n    fixture.detectChanges();\n    let btnElement = fixture.debugElement.queryAll(By.css('.btn-danger'));\n    btnElement.de;\n    expect(false).toEqual(app.deleted);\n  });\n});","map":{"version":3,"sources":["/home/christopher/Documentos/2022-1/Prueba de Software/presentacion3/FRONT-git/src/app/components/user/user.component.spec.ts"],"names":["HttpClientModule","TestBed","FormsModule","By","UserComponent","describe","component","fixture","beforeEach","configureTestingModule","imports","declarations","compileComponents","it","createComponent","app","componentInstance","expect","toBeTruthy","detectChanges","selectedUser","nombre","primerApellido","segundoApellido","email","telefono","btnElement","debugElement","query","css","nativeElement","click","toEqual","check","queryAll","de","deleted"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,EAAT,QAAmB,2BAAnB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACAC,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC5B,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMP,OAAO,CAACQ,sBAAR,CAA+B;AACjCC,MAAAA,OAAO,EAAE,CAACV,gBAAD,EAAmBE,WAAnB,CADwB;AAEjCS,MAAAA,YAAY,EAAE,CAACP,aAAD;AAFmB,KAA/B,EAIDQ,iBAJC,EAAN;AAKH,GANS,EAAV;AAOAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtB,UAAMN,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBV,aAAxB,CAAhB;AACA,UAAMW,GAAG,GAAGR,OAAO,CAACS,iBAApB,CAFsB,CAGtB;;AACAC,IAAAA,MAAM,CAACF,GAAD,CAAN,CAAYG,UAAZ;AACH,GALC,CAAF;AAMAL,EAAAA,EAAE,CAAC,UAAD,EAAa,MAAM;AACjB;AACA,UAAMN,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBV,aAAxB,CAAhB;AACA,UAAMW,GAAG,GAAGR,OAAO,CAACS,iBAApB,CAHiB,CAIjB;;AACAT,IAAAA,OAAO,CAACY,aAAR,GALiB,CAMjB;;AACAJ,IAAAA,GAAG,CAACK,YAAJ,CAAiBC,MAAjB,GAA0B,QAA1B;AACAN,IAAAA,GAAG,CAACK,YAAJ,CAAiBE,cAAjB,GAAkC,gBAAlC;AACAP,IAAAA,GAAG,CAACK,YAAJ,CAAiBG,eAAjB,GAAmC,iBAAnC;AACAR,IAAAA,GAAG,CAACK,YAAJ,CAAiBI,KAAjB,GAAyB,MAAzB;AACAT,IAAAA,GAAG,CAACK,YAAJ,CAAiBK,QAAjB,GAA4B,UAA5B,CAXiB,CAYjB;;AACA,QAAIC,UAAU,GAAGnB,OAAO,CAACoB,YAAR,CAAqBC,KAArB,CAA2BzB,EAAE,CAAC0B,GAAH,CAAO,oBAAP,CAA3B,CAAjB;AACAH,IAAAA,UAAU,CAACI,aAAX,CAAyBC,KAAzB,GAdiB,CAejB;;AACAd,IAAAA,MAAM,CAAC,CAAD,CAAN,CAAUe,OAAV,CAAkBjB,GAAG,CAACkB,KAAtB;AACH,GAjBC,CAAF;AAkBApB,EAAAA,EAAE,CAAC,QAAD,EAAW,MAAM;AACf,UAAMN,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBV,aAAxB,CAAhB;AACA,UAAMW,GAAG,GAAGR,OAAO,CAACS,iBAApB,CAFe,CAGf;AACA;;AACAT,IAAAA,OAAO,CAACY,aAAR;AACA,QAAIO,UAAU,GAAGnB,OAAO,CAACoB,YAAR,CAAqBO,QAArB,CAA8B/B,EAAE,CAAC0B,GAAH,CAAO,aAAP,CAA9B,CAAjB;AACAH,IAAAA,UAAU,CAACS,EAAX;AACAlB,IAAAA,MAAM,CAAC,KAAD,CAAN,CAAce,OAAd,CAAsBjB,GAAG,CAACqB,OAA1B;AACH,GATC,CAAF;AAUH,CA5CO,CAAR","sourcesContent":["import { HttpClientModule } from '@angular/common/http';\nimport { TestBed } from '@angular/core/testing';\nimport { FormsModule } from '@angular/forms';\nimport { By } from '@angular/platform-browser';\nimport { UserComponent } from './user.component';\ndescribe('UserComponent', () => {\n    let component;\n    let fixture;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            imports: [HttpClientModule, FormsModule],\n            declarations: [UserComponent]\n        })\n            .compileComponents();\n    });\n    it('should create', () => {\n        const fixture = TestBed.createComponent(UserComponent);\n        const app = fixture.componentInstance;\n        // se espera que ademas de True, sea un componente que exista\n        expect(app).toBeTruthy();\n    });\n    it('Add User', () => {\n        // se toma control del componente\n        const fixture = TestBed.createComponent(UserComponent);\n        const app = fixture.componentInstance;\n        //se detectan cambios\n        fixture.detectChanges();\n        //se setean la supuesta informacion agregada\n        app.selectedUser.nombre = \"Nombre\";\n        app.selectedUser.primerApellido = \"primerApellido\";\n        app.selectedUser.segundoApellido = \"segundoApellido\";\n        app.selectedUser.email = \"mail\";\n        app.selectedUser.telefono = \"telefono\";\n        //se hace accion del boton save\n        let btnElement = fixture.debugElement.query(By.css('button.btn-primary'));\n        btnElement.nativeElement.click();\n        //se compara\n        expect(1).toEqual(app.check);\n    });\n    it('DELETE', () => {\n        const fixture = TestBed.createComponent(UserComponent);\n        const app = fixture.componentInstance;\n        // se espera que ademas de True, sea un componente que exista\n        //se detectan cambios\n        fixture.detectChanges();\n        let btnElement = fixture.debugElement.queryAll(By.css('.btn-danger'));\n        btnElement.de;\n        expect(false).toEqual(app.deleted);\n    });\n});\n"]},"metadata":{},"sourceType":"module"}